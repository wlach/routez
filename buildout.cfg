[buildout]
eggs = 
     Django
     PyYAML
     parsedatetime
     routez
     flup
     simplejson
     transitfeed
     rtree

parts = 
      var_directory 
      libspatialindex
      rtree
      libroutez_autogen
      libroutez 
      neocoder_autogen
      neocoder 
      libyaml 
#      gtfs 
      _python 
      python 
#      graph 
      django 
      routez
      routez_settings
#      routez_db
      rtree_link
      creategraph
      createdb
      restart_routez

develop = 
    ${buildout:directory}/src

[buildout]
download-directory = ${buildout:directory}/downloads
download-cache = ${buildout:download-directory}

[development]
templates-directory = ${buildout:directory}/etc/templates
var-directory = ${buildout:directory}/var
routez = ${buildout:directory}/routez

[bin-template-macro]
recipe = collective.recipe.template
input = ${development:templates-directory}/${:filename}.in
output = ${buildout:bin-directory}/${:filename}

[var_directory]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds = mkdir -p ${development:var-directory}

[libyaml]
recipe = zc.recipe.cmmi
url = http://pyyaml.org/download/libyaml/yaml-0.1.3.tar.gz

[libroutez_autogen]
recipe = collective.recipe.cmd
on_update = true
cmds = cd src/libroutez && ./autogen.sh

[libspatialindex_env]
# a ridiculous hack necessary until the next release of spatialindex (which
# supports gcc 4.4)
CXXFLAGS=-include stdint.h

[libspatialindex]
recipe = hexagonit.recipe.cmmi
url = http://download.osgeo.org/libspatialindex/spatialindex-1.4.0.tar.gz
environment-section = libspatialindex_env

[rtree]
recipe = zc.recipe.egg:custom
version = 0.5.0
egg = rtree == ${:version}
include-dirs = ${libspatialindex:location}/include
library-dirs = ${libspatialindex:location}/lib
rpath = ${libspatialindex:location}/lib

[rtree_link]
recipe = collective.recipe.cmd
on_update = true
on_install = true
cmds = 
     cd develop-eggs && ln -sf Rtree-${rtree:version}*.egg rtree

[libroutez]
recipe = hexagonit.recipe.cmmi
path = ${buildout:directory}/src/libroutez

[neocoder_autogen]
recipe = collective.recipe.cmd
on_update = true
cmds = cd ${buildout:directory}/src/neocoder && ./autogen.sh

[neocoder]
recipe = hexagonit.recipe.cmmi
path = ${buildout:directory}/src/neocoder

[gtfs]
recipe = hexagonit.recipe.download
url = http://www.gtfs-data-exchange.com/gtfs/halifax-metro-transit_20091231_1727.zip
download-only = true

[_python]
recipe = zc.recipe.egg
interpreter = _python
eggs = ${buildout:eggs}
extra-paths = ${buildout:directory}/parts/libroutez/lib/python/
	   ${neocoder:location}/lib/python  

[python]
<= bin-template-macro
filename = python

[restart_routez]
<= bin-template-macro
filename = restart-routez

[creategraph]
<= bin-template-macro
filename = creategraph

[createdb]
<= bin-template-macro
filename = createdb

[routez_settings]
recipe = collective.recipe.template
input = ${development:templates-directory}/settings.py.in
output = ${buildout:directory}/src/routez/settings.py

[django]
recipe = djangorecipe
version = 1.1.1
settings = settings
project = routez
projectegg = routez
eggs = ${buildout:eggs}
extra-paths = ${libroutez:location}/lib/python 
	    ${neocoder:location}/lib/python  

[routez]
<= bin-template-macro
filename = routez

[graph]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds = bin/python-libroutez ${libroutez:location}/bin/creategraph.py \
     ${gtfs:location}/halifax-metro-transit_20091231_1727.zip \
     ${development:var-directory}/graph.routez \
     ${gtfs:location}/gtfs-graph-mapping.yml

[routez_db]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds = 
     ${buildout:directory}/bin/django-libroutez syncdb
     ${buildout:directory}/bin/python-libroutez ${buildout:directory}/src/routez/createdb.py \
     	${gtfs:location}/halifax-metro-transit_20091231_1727.zip \
	${gtfs:location}/gtfs-graph-mapping.yml
